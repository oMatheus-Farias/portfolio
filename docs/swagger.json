{
  "swagger": "2.0",
  "info": {
    "title": "Portfolio API",
    "description": "API for my portfolio to register my projects and manage the project.",
    "version": "1.0.0"
  },
  "paths": {
    "/api/user": {
      "post": {
        "summary": "Create a new user",
        "tags": ["User"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid params"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/auth": {
      "post": {
        "summary": "Authenticate user",
        "tags": ["User"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthUserParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid params"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/{email}": {
      "get": {
        "summary": "Get user by email",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john@doe.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid email"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/id/{userId}": {
      "get": {
        "summary": "Get user by id",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "4c3c9e07-4ebc-4a28-bad6-3902768af8f8"
                }
              }
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid userId"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/project": {
      "post": {
        "summary": "Create a new project",
        "tags": ["Project"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProjectParams"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer token"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Project created successfully",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Invalid params"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/project/name/{name}": {
      "get": {
        "summary": "Get project by name",
        "tags": ["Project"],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Project name"
                }
              }
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project found",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Invalid name"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateUserParams": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "12345678"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4c3c9e07-4ebc-4a28-bad6-3902768af8f8"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "12345678"
        }
      }
    },
    "AuthUserParams": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "12345678"
        }
      }
    },
    "CreateProjectParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Project name"
        },
        "description": {
          "type": "string",
          "example": "Project description"
        },
        "imagesUrl": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "https://image.com"
          }
        },
        "repositoryUrl": {
          "type": "string",
          "example": "https://github.com"
        },
        "projectUrl": {
          "type": "string",
          "example": "https://project.com"
        },
        "technologies": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Node.js"
          }
        },
        "userId": {
          "type": "string",
          "example": "4c3c9e07-4ebc-4a28-bad6-3902768af8f8"
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4c3c9e07-4ebc-4a28-bad6-3902768af8f8"
        },
        "name": {
          "type": "string",
          "example": "Project name"
        },
        "description": {
          "type": "string",
          "example": "Project description"
        },
        "imagesUrl": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "https://image.com"
          }
        },
        "repositoryUrl": {
          "type": "string",
          "example": "https://github.com"
        },
        "projectUrl": {
          "type": "string",
          "example": "https://project.com"
        },
        "technologies": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Node.js"
          }
        },
        "userId": {
          "type": "string",
          "example": "4c3c9e07-4ebc-4a28-bad6-3902768af8f8"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-08-01T00:00:00.000Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-08-01T00:00:00.000Z"
        }
      }
    }
  }
}
